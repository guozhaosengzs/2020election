election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
View(state_searches)
View(state_searches)
names(state_searches)[1]
names(state_searches)[1] <- 'state'
election_combined <- merge(election_small, state_searches, by='state')
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gitcnk/Data/master/election2016.csv')
# Let's create a smaller dataset.
election_small <- election2016 %>%
select(state, winner, vote_margin, pct_margin)
election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
View(state_searches)
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
names(state_searches)[1] <- 'state'
election_combined <- merge(election_small, state_searches, by='state')
View(election_combined)
pairs(election_combined)
names(state_searches)
pairs(election_combined, margin_revised ~ Benghazi + immigration + racism + fake.news + Twitter + WikiLeaks + CNN)
pairs(data=election_combined, margin_revised ~ Benghazi + immigration + racism + fake.news + Twitter + WikiLeaks + CNN)
pairs(data=election_combined, margin_revised ~ )
pairs(data=election_combined, margin_revised ~ Trump + Clinton + CNN + wikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
pairs(data=election_combined, margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
election_predict <- lm(margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism,
data=election_combined)
View(election_predict)
summary(election_predict)
election_predict <- lm(margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter,
data=election_combined)
summary(election_predict)
election_predict <- lm(margin_revised ~ Trump + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter,
data=election_combined)
summary(election_predict)
election_predict <- lm(margin_revised ~ Trump + CNN + Benghazi + Fox.News +
Facebook + Instagram + Twitter,
data=election_combined)
summary(election_predict)
election_predict <- lm(margin_revised ~ Trump + CNN + Benghazi + Fox.News +
Facebook + Instagram,
data=election_combined)
summary(election_predict)
pairs(data=election_combined, margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News +
Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
pairs(data=election_combined, margin_revised ~ Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
pairs(data=election_combined, margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News)
pairs(data=election_combined, margin_revised ~ Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
library(comprehenr)
install.packages("comprehenr")
library(comprehenr)
election_combined[1]
election_combined[2]
length(names(election_combined)
)
correlations <- to_list(cor(election_combined$margin_revised, election_combined[x]) for x in length(names(election_combined)))
install.packages("rpart")
library(rpart)
View(election2016)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gitcnk/Data/master/election2016.csv')
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
names(state_searches)[1] <- 'state'
# Let's create a smaller dataset.
election_small <- election2016 %>%
select(state, winner, vote_margin, pct_margin)
election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
election_combined <- merge(election_small, state_searches, by='state')
pairs(data=election_combined, margin_revised ~ Trump + Clinton + CNN + WikiLeaks + Make.America.Great.Again + Benghazi + Fox.News)
pairs(data=election_combined, margin_revised ~ Facebook + Instagram + Twitter + fake.news + black.lives.matter + antifa + healthcare + immigration + racism)
election_predict <- lm(margin_revised ~ Trump + CNN + Benghazi + Fox.News +
Facebook + Instagram,
data=election_combined)
summary(election_predict)
names(election_combined)
names(election_combined)[5::]
names(election_combined)[5:]
names(election_combined)[5]
names(election_combined)[7]
names(election_combined)[7:20]
names(election_combined)[7:25]
names(election_combined)[7:30]
names(election_combined)[7:31]
names(election_combined)[7:30]
print(name)
for (name in names(election_combined)[7:30]) {
print(name)
}
for (name in names(election_combined)[7:30]) {
print(name)
summary(election_combined[name])
}
summary(election_combined[name])
rcorr(election_combined$pct_margin, election_combined[name])
for (name in names(election_combined)[7:30]) {
corr(election_combined$pct_margin, election_combined[name])
}
for (name in names(election_combined)[7:30]) {
cor(election_combined$pct_margin, election_combined[name])
}
summary(election_predict)
for (name in names(election_combined)[7:30]) {
print(cor(election_combined$pct_margin, election_combined[name]))
}
for (name in names(election_combined)[7:30]) {
print(cor(election_combined$margin_revised, election_combined[name]))
}
election_search <- election_combined %>% select(names(election_combined)[6:30])
View(election_search)
tree(data=election_search, formula=margin_revised ~ .)
library(tree)
library(rtree)
library(rpart)
model <- tree(data=election_search, formula=margin_revised ~ .)
model <- rpart(margin_revised ~ . , data=election_search)
summary(model)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(model)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gitcnk/Data/master/election2016.csv')
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
names(state_searches)[1] <- 'state'
# Let's create a smaller dataset.
election_small <- election2016 %>%
select(state, winner, vote_margin, pct_margin)
election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
election_combined <- merge(election_small, state_searches, by='state')
for (name in names(election_combined)[7:30]) {
print(cor(election_combined$margin_revised, election_combined[name]))
}
election_search <- election_combined %>% select(names(election_combined)[6:30])
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
for (name in names(election_combined)[7:15]) {
print(cor(election_combined$margin_revised, election_combined[name]))
}
election_search <- election_combined %>% select(names(election_combined)[6:30])
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
election_search <- election_combined %>% select(names(election_combined)[6:15])
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gitcnk/Data/master/election2016.csv')
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
names(state_searches)[1] <- 'state'
# Let's create a smaller dataset.
election_small <- election2016 %>%
select(state, winner, vote_margin, pct_margin)
election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
election_combined <- merge(election_small, state_searches, by='state')
for (name in names(election_combined)[7:30]) {
print(cor(election_combined$margin_revised, election_combined[name]))
}
election_search <- election_combined %>% select(names(election_combined)[6:30])
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
plot(election_search$Trump, election_search$margin_revised)
plot(election_search$Benghazi, election_search$margin_revised)
plot(election_search$WikiLeaks, election_search$margin_revised)
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
- election_search$Russia
- election_search[Russia]
View(election_search)
election_search[Russia]
election_search_revised <- election_search - election_search[Trump] - election_search[Fox.News] - election_search[Facebook]
names(election_search_revised)
names(election_search)
election_search_revised <- election_search[1] + election_search[3]
View(election_search_revised)
election_search_revised <- merge(election_search[1], election_search[3])
View(election_search_revised)
election_search_revised <- rbind(election_search[1], election_search[3])
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gitcnk/Data/master/election2016.csv')
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches.csv")
names(state_searches)[1] <- 'state'
# Let's create a smaller dataset.
election_small <- election2016 %>%
select(state, winner, vote_margin, pct_margin)
election_small$winner_binary <- ifelse(election_small$winner == "Trump", 1, 0)
election_small$margin_revised <- ifelse(election_small$winner == "Clinton", -1 * election_small$pct_margin, election_small$pct_margin)
election_combined <- merge(election_small, state_searches, by='state')
for (name in names(election_combined)[7:30]) {
print(cor(election_combined$margin_revised, election_combined[name]))
}
election_search <- election_combined %>% select(names(election_combined)[6:30])
model <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model)
election_search_revised <- rbind(election_search[1], election_search[3])
names(election_search)
View(model)
plot(model)
plots(model)
resid(model)
plot(resid(model))
election_search_revised <- election_search[,!(names(election_search) %in% c("Trump", "Fox.News", "Facebook", "Russia"))]
View(election_search_revised)
model_t <- rpart(margin_revised ~ . , data=election_search)
rpart.plot(model_t)
model_t <- rpart(margin_revised ~ . , data=election_search_revised)
rpart.plot(model_t)
model_f <- lm(margin_revised ~ China + Crimea + CNN + Fox.News + Russia + Trump + Facebook, data=election_search)
summary(model_f)
plot(model_f)
View(election2016)
View(election_search)
View(election2016)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
election2016 <- read.csv(file = 'https://raw.githubusercontent.com/gracejanes/Test1/master/presidential_poll_averages_2020.csv')
election2020 <- read.csv(file = 'https://raw.githubusercontent.com/gracejanes/Test1/master/presidential_poll_averages_2020.csv')
state_searches <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
View(election2020)
names(state_searches)[1] <- 'state'
election2020 <- election2020 %>% filter(modeldate == '9/29/2020')
trump2020 <- election2020 %>% filter(candidate_name != 'Joseph R. Biden Jr.')
biden2020 <- election2020 %>% filter(candidate_name == 'Joseph R. Biden Jr.')
trump2020 <- election2020 %>% filter(candidate_name == 'Donald J. Trump')
trump2020 <- election2020 %>% filter(candidate_name == 'Donald Trump')
election2020compare <- merge(biden2020, trump2020, by='state')
View(election2020compare)
names(election2020compare)
names(electoin2020compare)[6] <- biden_pct
names(electoin2020compare)[6] = biden_pct
names(electoin2020compare)[6] <- 'biden_pct'
names(election2020compare)[6] <- 'biden_pct'
names(election2020compare)[11] <- 'trump_pct'
View(state_searches)
election2020compare$poll_margin <- election2020compare$trump_pct - election2020compare$biden_pct
election2020combined <- merge(election2020compare, state_searches, by='state')
View(election2020combined)
names(election2020combined)
election2020combined <- election2020combined %>% select(names(election2020combined)[12::])
election2020combined <- election2020combined %>% select(names(election2020combined)[12:])
election2020combined <- election2020combined %>% select(names(election2020combined)[12:39])
model <- rpart(poll_margin ~ . , data=election2020combined)
rpart.plot(model)
election2020_revised <- election2020combined[,!(names(election2020combined) %in% c("Trump", "Fox.News", "social.distancing"))]
model_t <- rpart(margin_revised ~ . , data=election_search_revised)
rpart.plot(model_t)
election2020_revised <- election2020_revised[,!(names(election2020_revised) %in% c("China", "Crimea", "CNN"))]
model_t <- rpart(margin_revised ~ . , data=election_search_revised)
rpart.plot(model_t)
View(election2020_revised)
election2020_revised <- election2020combined[,!(names(election2020combined) %in% c("Trump", "Fox.News", "social.distancing"))]
model_t <- rpart(margin_revised ~ . , data=election2020_revised)
rpart.plot(model_t)
model_t <- rpart(poll_margin ~ . , data=election2020_revised)
rpart.plot(model_t)
election2020_revised <- election2020_revised[,!(names(election2020_revised) %in% c("NASDAQ", "Dow.Jones", "immigration"))]
model_t <- rpart(poll_margin ~ . , data=election2020_revised)
rpart.plot(model_t)
model_f <- lm(poll_margin ~ Trump + Fox.News + social.distancing + NASDAQ + Dow.Jones + immigration +
racism + Instagram + Russia, data=election2020_revised)
summary(model_f)
model_f <- lm(poll_margin ~ Trump + Fox.News + social.distancing + NASDAQ + Dow.Jones + immigration +
racism + Instagram + Russia, data=election2020combined)
summary(model_f)
plot(model_f)
View(election2020combined)
View(election2020_revised)
View(election2020combined)
View(election2020compare)
election2020combined <- merge(election2020compare, state_searches, by='state')
View(election2020combined)
View(biden2020)
View(election2020)
View(election_combined)
election2020compare <- merge(biden2020, trump2020, by='state')
View(election2020compare)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv", header=FALSE)
View(output)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv")
View(output)
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
View(state_searches2020)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv")
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
state.abb[match(state_searches2020$geoName, state.abb)]
match(state_searches2020$geoName, state.abb)
state.name[match(state_searches2020$geoName, state.abb)]
state.name[match(state_searches2020$geoName, state.name)]
state.abb[match(state_searches2020$geoName, state.name)]
state_searches2020$state <- state.abb[match(state_searches2020$geoName, state.name)]
pcmodel <- prcomp(state_searches2020[,-1], center = T, scale = T )
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
state_searches2020$geoName <- state.abb[match(state_searches2020$geoName, state.name)]
pcmodel <- prcomp(state_searches2020[,-1], center = T, scale = T )
summary(pcmodel)
PCscores <- predict(pcmodel)
PCscores <- data.frame(PCscores)
PCscores$state <- st$geoName
PCscores$state <- state_searches2020$geoName
ggplot(data = PCscores) +
aes(x = PC1,
y = PC2) +
geom_point() +
geom_text(mapping = aes(label = state),
size = 2,
vjust = 'inward',
hjust = 'inward') +
geom_vline( xintercept = 0, col ='red')
state_searches <- na.omit(state_searches2020)
View(state_searches)
st <- na.omit(state_searches2020)
pcmodel <- prcomp(st[,-1], center = T, scale = T )
summary(pcmodel)
PCscores <- predict(pcmodel)
PCscores <- data.frame(PCscores)
PCscores$state <- state_searches2020$geoName
PCscores$state <- st$geoName
View(PCscores)
PCscores %>% select(names(election2020combined)[1:2])
PCscores$state <- st$geoName
PCscores %>% select(names(PCscores)[1:2])
PCscores <- PCscores %>% select(names(PCscores)[1:2])
PCscores$state <- st$geoName
View(PCscores)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv")
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
state_searches2020$geoName <- state.abb[match(state_searches2020$geoName, state.name)]
st <- na.omit(state_searches2020)
pcmodel <- prcomp(st[,-1], center = T, scale = T )
summary(pcmodel)
PCscores <- predict(pcmodel)
PCscores <- data.frame(PCscores)
PCscores <- PCscores %>% select(names(PCscores)[1:2])
PCscores$state <- st$geoName
View(output)
output_whole <- merge(output, st, by.x="State", by.y="geoName")
View(output_whole)
output_whole <- merge(output_whole, PCscores, by.x="State", by.y="state")
names(output$State)
output$staet
output$State
safe_states = ['CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY']
safe_states = ('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states = list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states
safe_states = list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states <- list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
train_set <- output_whole[safe_states]
safe_states <- data.frame('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
train_set <- output_whole[safe_states]
View(safe_states)
safe_states <- c('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
train_set <- output_whole[safe_states]
safe_states$state <- c('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
View(safe_states)
rm(safe_states)
safe_states$state <- c('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states <- gather('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states <- list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
View(safe_states)
safe_states <- gather(safe_states)
do.call(rbind.data.frame, safe_states)
safe_states <- do.call(rbind.data.frame, safe_states)
View(safe_states)
names(safe_states)[1] <- 'state'
View(safe_states)
train_set <- output_whole[safe_states]
train_set <- output_whole[output_whole$State = safe_states]
train_set <- output_whole[output_whole$State == safe_states]
train_set <- output_whole[output_whole$State in safe_states]
train_set <- output_whole[output_whole$State %in% safe_states]
View(train_set)
train_set <- output_whole[output_whole$State %in% safe_states$state]
train_set <- output_whole[output_whole$State %in% safe_states$state,]
View(train_set)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula = Pred_Ratio_2020 ~ .)
summary(lm)
a <- train_set[,!(names(train_set) %in% c("State"))]
View(a)
model_t <- rpart(data=a, formula=Pred_Ratio_2020 ~ .)
plot(model_t)
model_t <- rpart(data=a, Pred_Ratio_2020 ~ .)
plot(model_t)
model_t <- rpart(data=a, Pred_Ratio_2020 ~ .)
View(model_t)
summary(model_t)
rpart.plot(model_t)
model_t <- rpart(data=a, Pred_Ratio_2020 ~ .)
rpart.plot(model_t)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula = Pred_Ratio_2020 ~ Fox.News + Instagram + Facebook + PC1 + Trump + Twitter)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula = Pred_Ratio_2020 ~ Fox.News + Facebook + PC1 + Trump)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  PC1 + PC2)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2 + Fox.News + Trump)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2)
summary(lm)
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2)
summary(lm)
train_set$Pred_Ratio_2020_2 <- predict(lm)
output_whole$Pred_Ratio_2020_2 <- predict(lm)
output_whole$Pred_Ratio_2020_2 <- predict(lm, output_whole)
output_output <- output_whole[,!(names(output_whole) %in% c("State", "Pred_Ratio_2020", "Pred_Ratio_2020_2"))]
View(output_output)
output_output <- output_whole[,(names(output_whole) %in% c("State", "Pred_Ratio_2020", "Pred_Ratio_2020_2"))]
View(output_output)
output_output$agree <- (output_output$Pred_Ratio_2020 >= 1 & output_output$Pred_Ratio_2020_2 >= 1) |
(output_output$Pred_Ratio_2020 < 1 & output_output$Pred_Ratio_2020_2 < 1)
write.csv(output_output)
write.csv(output_output, "output2.csv")
output_output$avg_ratio <- mean(output_output$Pred_Ratio_2020, output_output$Pred_Ratio_2020_2)
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv")
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
state_searches2020$geoName <- state.abb[match(state_searches2020$geoName, state.name)]
st <- na.omit(state_searches2020)
pcmodel <- prcomp(st[,-1], center = T, scale = T )
PCscores <- predict(pcmodel)
PCscores <- data.frame(PCscores)
PCscores <- PCscores %>% select(names(PCscores)[1:2])
PCscores$state <- st$geoName
output_whole <- merge(output, st, by.x="State", by.y="geoName")
output_whole <- merge(output_whole, PCscores, by.x="State", by.y="state")
safe_states <- list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states <- do.call(rbind.data.frame, safe_states)
names(safe_states)[1] <- 'state'
train_set <- output_whole[output_whole$State %in% safe_states$state,]
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2)
summary(lm)
output_whole$Pred_Ratio_2020_2 <- predict(lm, output_whole)
output_output <- output_whole[,(names(output_whole) %in% c("State", "Pred_Ratio_2020", "Pred_Ratio_2020_2"))]
output_output$agree <- (output_output$Pred_Ratio_2020 >= 1 & output_output$Pred_Ratio_2020_2 >= 1) |
(output_output$Pred_Ratio_2020 < 1 & output_output$Pred_Ratio_2020_2 < 1)
output_output$avg_ratio <- mean(output_output$Pred_Ratio_2020, output_output$Pred_Ratio_2020_2)
write.csv(output_output, "output2.csv")
View(output_output)
output_output$avg_ratio <- (output_output$Pred_Ratio_2020 + output_output$Pred_Ratio_2020_2) / 2
output_output$reelection <- ifelse(output_output$avg_ratio > 1, TRUE, FALSE)
write.csv(output_output, "output2.csv")
library(tidyverse)
library(ggplot2)
library(ISLR)
library(rpart)
library(rpart.plot)
output <- read.csv("~/GitHub/2020election/Zhaosen/data/output.csv")
state_searches2020 <- read.csv("~/GitHub/2020election/matt/state_searches2020.csv")
state_searches2020$geoName <- state.abb[match(state_searches2020$geoName, state.name)]
st <- na.omit(state_searches2020)
pcmodel <- prcomp(st[,-1], center = T, scale = T )
PCscores <- predict(pcmodel)
PCscores <- data.frame(PCscores)
PCscores <- PCscores %>% select(names(PCscores)[1:2])
PCscores$state <- st$geoName
output_whole <- merge(output, st, by.x="State", by.y="geoName")
output_whole <- merge(output_whole, PCscores, by.x="State", by.y="state")
safe_states <- list('CA', 'CT', 'DE', 'HI', 'IL', 'MD', 'MA', 'NJ', 'NY', 'RI', 'VT', 'WA', 'AL', 'AK', 'ID', 'KS', 'MT', 'ND', 'SD', 'TN', 'WY')
safe_states <- do.call(rbind.data.frame, safe_states)
names(safe_states)[1] <- 'state'
train_set <- output_whole[output_whole$State %in% safe_states$state,]
lm <- lm(data=train_set[,!(names(train_set) %in% c("State"))], formula =  Pred_Ratio_2020 ~ PC1 + PC2)
summary(lm)
output_whole$Pred_Ratio_2020_2 <- predict(lm, output_whole)
output_output <- output_whole[,(names(output_whole) %in% c("State", "Pred_Ratio_2020", "Pred_Ratio_2020_2"))]
output_output$agree <- (output_output$Pred_Ratio_2020 >= 1 & output_output$Pred_Ratio_2020_2 >= 1) |
(output_output$Pred_Ratio_2020 < 1 & output_output$Pred_Ratio_2020_2 < 1)
output_output$avg_ratio <- (output_output$Pred_Ratio_2020 + output_output$Pred_Ratio_2020_2) / 2
output_output$reelection <- ifelse(output_output$avg_ratio > 1, TRUE, FALSE)
write.csv(output_output, "output2.csv")
output_output$avg_ratio <- output_output$Pred_Ratio_2020 * .6 + output_output$Pred_Ratio_2020_2 * .4
output_output$reelection <- ifelse(output_output$avg_ratio > 1, TRUE, FALSE)
write.csv(output_output, "output2.csv")
output_output$avg_ratio <- output_output$Pred_Ratio_2020 * .5 + output_output$Pred_Ratio_2020_2 * .5
output_output$reelection <- ifelse(output_output$avg_ratio > 1, TRUE, FALSE)
write.csv(output_output, "output2prime.csv")
